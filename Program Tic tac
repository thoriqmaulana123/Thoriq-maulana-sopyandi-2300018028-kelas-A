#include <iostream>

// Fungsi untuk menampilkan papan permainan
void displayBoard(char board[3][3]) {
    std::cout << "Tic Tac Toe\n";
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            std::cout << board[i][j];
            if (j < 2) std::cout << " | ";
        }
        std::cout << std::endl;
        if (i < 2) std::cout << "---------\n";
    }
    std::cout << std::endl;
}

// Fungsi untuk mengecek apakah ada pemenang
bool checkWinner(char board[3][3], char player) {
    // Cek baris dan kolom
    for (int i = 0; i < 3; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }

    // Cek diagonal
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }

    return false;
}

int main() {
    char board[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'}};
    int moveCount = 0;
    char currentPlayer = 'X';

    while (true) {
        displayBoard(board);

        // Input pemain
        int move;
        std::cout << "Player " << currentPlayer << ", masukkan nomor (1-9): ";
        std::cin >> move;

        // Validasi input
        if (move < 1 || move > 9 || board[(move - 1) / 3][(move - 1) % 3] == 'X' || board[(move - 1) / 3][(move - 1) % 3] == 'O') {
            std::cout << "Input tidak valid. Coba lagi.\n";
            continue;
        }

        // Update papan permainan
        board[(move - 1) / 3][(move - 1) % 3] = currentPlayer;
        ++moveCount;

        // Cek pemenang
        if (checkWinner(board, currentPlayer)) {
            displayBoard(board);
            std::cout << "Player " << currentPlayer << " menang!\n";
            break;
        }

        // Cek seri
        if (moveCount == 9) {
            displayBoard(board);
            std::cout << "Permainan seri!\n";
            break;
        }

        // Ganti pemain
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }

    return 0;
}
